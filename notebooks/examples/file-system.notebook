---
description: Example of using the file system in Data-Forge Notebook
version: 4
---
```typescript
console.log(process.cwd()); // The current working directory is the same directory that this notebook was loaded from.
```


######
```json - output
{
    "value": {
        "displayType": "text",
        "data": "C:\\projects\\data-forge-notebook\\data-forge-notebook\\notebooks\\test\n"
    }
}
```


------
```typescript
const fs = require('fs');                   // Node.js module for accessing the file system.
var promisify = require('promisify-any');   // Module for converting Node.js callback-style functions to promise-based functions (this means we can use the await keword)

const directoryContent = await promisify(fs.readdir)("./"); // Read the current directory.
display(directoryContent);
```


######
```json - output
{
    "value": {
        "data": [
            "await-resolved-promise.notebook",
            "bad-map.notebook",
            "basic plot test.notebook",
            "big-code-cell.notebook",
            "broken-sharp.notebook",
            "callback-based-request.notebook",
            "callback-read-file-test.notebook",
            "circular object reference.notebook",
            "current-working-directory.notebook",
            "display.notebook",
            "error - a long error message.notebook",
            "error - console trace.notebook",
            "error - deep stack error.notebook",
            "example.csv",
            "example.json",
            "file-system.notebook",
            "node_modules",
            "package-lock.json",
            "package.json",
            "sleep.notebook",
            "timeout.notebook"
        ]
    }
}
```


------
```typescript
process.chdir("c:/temp"); // You can change the working directory to whatever you want and it only affects this cell.

display(process.cwd());
```


######
```json - output
{
    "value": {
        "data": "c:\\temp"
    }
}
```


------
```typescript
display(process.cwd()); // The working directory is reset in the next cell.
```


######
```json - output
{
    "value": {
        "data": "c:\\temp"
    }
}
```


