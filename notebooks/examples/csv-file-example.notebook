---
description: Example of loading, transforming and saving a CSV file.
version: 4
---
# CSV example

An example that shows how to load, transform and save a CSV file using [the Datakit library](https://www.npmjs.com/package/datakit).

**NOTE**: This example is pretty much the same as *json file example.notebook* except for the file type.
------
## Loading a CSV file

Load the file "example.csv", which is placed to next to where this notebook is saved.
------
```typescript
const { readCsv, writeCsv } = require('datakit');

const inputData = await readCsv("./example.csv");

display(inputData.slice(0, 3), "table");
```


######
```json - output
{
    "value": {
        "displayType": "table",
        "data": [
            {
                "Name": "Alex",
                "Sex": "M",
                "Age": 41,
                "Height (in)": 74,
                "Weight (lbs)": 170
            },
            {
                "Name": "Bert",
                "Sex": "M",
                "Age": 42,
                "Height (in)": 68,
                "Weight (lbs)": 166
            },
            {
                "Name": "Carl",
                "Sex": "M",
                "Age": 32,
                "Height (in)": 70,
                "Weight (lbs)": 155
            }
        ]
    }
}
```


------
## Apply a transformation

Let's convert to the metric system of measurement!
------
```typescript
const transformedData = inputData.map(row => ({
    ...row,
    "Height (cm)": row["Height (in)"] * 2.54,      // Inches to centimeters.
    "Weight (kgs)": row["Weight (lbs)"] * 0.453592 // Pounds to kilograms.
}));
display(transformedData.slice(0, 5), "table");
```


######
```json - output
{
    "value": {
        "displayType": "table",
        "data": [
            {
                "Name": "Alex",
                "Sex": "M",
                "Age": 41,
                "Height (in)": 74,
                "Weight (lbs)": 170,
                "Height (cm)": 187.96,
                "Weight (kgs)": 77.11064
            },
            {
                "Name": "Bert",
                "Sex": "M",
                "Age": 42,
                "Height (in)": 68,
                "Weight (lbs)": 166,
                "Height (cm)": 172.72,
                "Weight (kgs)": 75.296272
            },
            {
                "Name": "Carl",
                "Sex": "M",
                "Age": 32,
                "Height (in)": 70,
                "Weight (lbs)": 155,
                "Height (cm)": 177.8,
                "Weight (kgs)": 70.30676
            },
            {
                "Name": "Dave",
                "Sex": "M",
                "Age": 39,
                "Height (in)": 72,
                "Weight (lbs)": 167,
                "Height (cm)": 182.88,
                "Weight (kgs)": 75.749864
            },
            {
                "Name": "Elly",
                "Sex": "F",
                "Age": 30,
                "Height (in)": 66,
                "Weight (lbs)": 124,
                "Height (cm)": 167.64000000000001,
                "Weight (kgs)": 56.245408
            }
        ]
    }
}
```


------
## Saving a CSV file

Now let's save our transformed CSV file to the current directory.
------
```typescript
await writeCsv("transformed.csv", transformedData);

console.log("Transformed CSV file has been written to " + process.cwd());
```


######
```json - output
{
    "value": {
        "displayType": "text",
        "data": "Transformed CSV file has been written to C:\\projects\\data-forge-notebook\\editor-core\\notebooks\\examples\n"
    }
}
```


------
## What's the next step?

There's so much you can do with Data-Forge Notebook.

What are you interested in?

- [Plot charts](http://open-notebook=./plot-charts.notebook)
- [Plot maps](http://open-notebook=./plot-maps.notebook)
- [Work with JSON data files](http://open-notebook=./json-file-example.notebook)
- [Work with REST APIs](http://open-notebook=./rest-api-example.notebook)

[Check out all the visualizations supported by Data-Forge Notebook](http://open-notebook=./viz.notebook)

[Browse all example notebooks](http://command+open-example-notebook)
