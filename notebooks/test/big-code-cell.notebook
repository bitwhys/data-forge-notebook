{
    "version": 3,
    "language": "javascript",
    "cells": [
        {
            "id": "5605a531-e5c5-11ea-a397-6d84f6290d3a",
            "cellType": "code",
            "cellScope": "global",
            "code": "() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};",
            "lastEvaluationDate": "2020-08-24T14:58:43.625+10:00",
            "output": [],
            "errors": [],
            "height": 3719
        },
        {
            "id": "0d10fea0-e693-11ea-aaa9-81d2686cc8b9",
            "cellType": "code",
            "cellScope": "global",
            "code": "() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};",
            "lastEvaluationDate": "2020-08-25T15:23:40.847+10:00",
            "output": [],
            "errors": [],
            "height": 3719
        },
        {
            "id": "21af50a0-e693-11ea-aaa9-81d2686cc8b9",
            "cellType": "code",
            "cellScope": "global",
            "code": "() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};\r\n() => {\r\n    const singers = [\r\n        { name: 'Steven Tyler', band: 'Aerosmith', born: 1948 },\r\n        { name: 'Karen Carpenter', band: 'The Carpenters', born: 1950 },\r\n        { name: 'Kurt Cobain', band: 'Nirvana', born: 1967 },\r\n        { name: 'Stevie Nicks', band: 'Fleetwood Mac', born: 1948 },\r\n    ];\r\n\r\n    function compareValues(key, order = 'asc') {\r\n        return function innerSort(a, b) {\r\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n                // property doesn't exist on either object\r\n                return 0;\r\n            }\r\n\r\n            const varA = (typeof a[key] === 'string')\r\n                ? a[key].toUpperCase() : a[key];\r\n            const varB = (typeof b[key] === 'string')\r\n                ? b[key].toUpperCase() : b[key];\r\n\r\n            let comparison = 0;\r\n            if (varA > varB) {\r\n                comparison = 1;\r\n            } else if (varA < varB) {\r\n                comparison = -1;\r\n            }\r\n            return (\r\n                (order === 'desc') ? (comparison * -1) : comparison\r\n            );\r\n        };\r\n    }\r\n};",
            "lastEvaluationDate": "2020-08-25T15:23:40.847+10:00",
            "output": [],
            "errors": [],
            "height": 3719
        }
    ]
}