name: Nightly
on:
  schedule:
    - cron: '0 8 * * *' # Run at 8am UTC, 6pm AEST.
  workflow_dispatch:

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit

    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set the release tag
        run: |
          echo "RELEASE_TAG=nightly-$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      
      - name: Print latest_commit
        run: echo ${{ github.sha }}

      - id: should_run
        continue-on-error: true
        name: Check latest commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: test -z $(git rev-list  --after="24 hours"  ${{ github.sha }}) && echo "::set-output name=should_run::false"

  publish:
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        include: 
          - os: windows-latest 
            build_script: build-electron-win
            files: |
              /temp/dfn-build/build/installer/Data-Forge Notebook v2 Setup - 2.0.0-*.exe
              /temp/dfn-build/build/installer/Data-Forge Notebook v2 Setup - 2.0.0-*.zip
            build_parent_dir: /temp
          - os: macos-latest 
            build_script: build-electron-mac
            files: | 
              /tmp/dfn-build/build/installer/Data-Forge Notebook v2 Setup - 2.0.0-*.dmg
              /tmp/dfn-build/build/installer/Data-Forge Notebook v2 Setup - 2.0.0-*.tar.gz
            build_parent_dir: /tmp
        # os: [ubuntu-latest, windows-latest, macos-latest] # Build for all platforms.

    runs-on: ${{ matrix.os }}

    env:
      BUILD_PARENT_DIR: ${{ matrix.build_parent_dir }}

    steps:
      - name: Print release tag
        run: |
          echo ${{ env.RELEASE_TAG }}
          echo ${RELEASE_TAG}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 8.6.7

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: cache
          key: ${{ runner.os }}-cache

      - name: Install dependencies
        run: pnpm install

      - name: Create version file
        run: |
          echo "export const version = \"2.0.0-${{ env.RELEASE_TAG }}\"; export const sha = \"${{ github.sha }}\";" > shells/electron/src/version.ts
          cat shells/electron/src/version.ts

      - name: Compile
        run: pnpm run compile

      - name: Test
        run: pnpm test

      - name: Build plugins 
        run: pnpm run build-plugins

      # - name: Build installer
      #   run: |
      #     pnpm run ${{ matrix.build_script }}
      #     ls ${{ matrix.build_parent_dir }}/dfn-build/build/installer

      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     name: Nightly ${{ env.CURRENT_DATE }}
      #     tag_name: 2.0.0-${{ env.RELEASE_TAG }}
      #     body: Nightly build
      #     draft: true
      #     prerelease: true
      #     files: ${{ matrix.files }}